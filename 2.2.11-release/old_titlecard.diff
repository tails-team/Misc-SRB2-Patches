diff --git a/src/st_stuff.c b/src/st_stuff.c
index 206c93273..35756899b 100644

Attempts to port the old title card sequence from pre-2.2. Does not affect
graphics - you'll need to supply that yourself.

--- a/src/st_stuff.c
+++ b/src/st_stuff.c
@@ -1209,12 +1209,10 @@ static void ST_drawInput(void)
 }
 
 static patch_t *lt_patches[3];
-static INT32 lt_scroll = 0;
-static INT32 lt_mom = 0;
-static INT32 lt_zigzag = 0;
 
 tic_t lt_ticker = 0, lt_lasttic = 0;
-tic_t lt_exitticker = 0, lt_endtime = 0;
+tic_t lt_preticker = 0;
+tic_t lt_endtime = 0;
 
 //
 // Load the graphics for the title card.
@@ -1256,11 +1254,10 @@ void ST_startTitleCard(void)
 	ST_cacheLevelTitle();
 
 	// initialize HUD variables
-	lt_ticker = lt_exitticker = lt_lasttic = 0;
-	lt_endtime = 2*TICRATE + (10*NEWTICRATERATIO);
-	lt_scroll = BASEVIDWIDTH * FRACUNIT;
-	lt_zigzag = -((lt_patches[1])->width * FRACUNIT);
-	lt_mom = 0;
+	lt_ticker = 0;
+	lt_preticker = 0;
+	lt_lasttic = 0;
+	lt_endtime = 111;
 }
 
 //
@@ -1271,14 +1268,6 @@ void ST_preDrawTitleCard(void)
 {
 	if (!G_IsTitleCardAvailable())
 		return;
-
-	if (lt_ticker >= (lt_endtime + TICRATE))
-		return;
-
-	if (!lt_exitticker)
-		st_translucency = 0;
-	else
-		st_translucency = max(0, min((INT32)lt_exitticker-4, cv_translucenthud.value));
 }
 
 //
@@ -1292,42 +1281,17 @@ void ST_runTitleCard(void)
 	if (!G_IsTitleCardAvailable())
 		return;
 
-	if (lt_ticker >= (lt_endtime + TICRATE))
+	if (lt_ticker >= (lt_endtime))
 		return;
 
-	if (run || (lt_ticker < PRELEVELTIME))
+	if (run)
 	{
-		// tick
-		lt_ticker++;
-		if (lt_ticker >= lt_endtime)
-			lt_exitticker++;
-
-		// scroll to screen (level title)
-		if (!lt_exitticker)
-		{
-			if (abs(lt_scroll) > FRACUNIT)
-				lt_scroll -= (lt_scroll>>2);
-			else
-				lt_scroll = 0;
-		}
-		// scroll away from screen (level title)
-		else
-		{
-			lt_mom -= FRACUNIT*6;
-			lt_scroll += lt_mom;
-		}
-
-		// scroll to screen (zigzag)
-		if (!lt_exitticker)
-		{
-			if (abs(lt_zigzag) > FRACUNIT)
-				lt_zigzag -= (lt_zigzag>>2);
-			else
-				lt_zigzag = 0;
+		if (lt_preticker < 28) {
+		    lt_preticker++;
+		    lt_ticker = 1; // hold ticker until we're ready
+		} else {
+		    lt_ticker++;
 		}
-		// scroll away from screen (zigzag)
-		else
-			lt_zigzag += lt_mom;
 	}
 }
 
@@ -1341,18 +1305,7 @@ void ST_drawTitleCard(void)
 	UINT8 actnum = mapheaderinfo[gamemap-1]->actnum;
 	INT32 lvlttlxpos, ttlnumxpos, zonexpos;
 	INT32 subttlxpos = BASEVIDWIDTH/2;
-	INT32 ttlscroll = FixedInt(lt_scroll);
-	INT32 zzticker;
-	patch_t *actpat, *zigzag, *zztext;
-	UINT8 colornum;
-	const UINT8 *colormap;
-
-	if (players[consoleplayer].skincolor)
-		colornum = players[consoleplayer].skincolor;
-	else
-		colornum = cv_playercolor.value;
-
-	colormap = R_GetTranslationColormap(TC_DEFAULT, colornum, GTC_CACHE);
+	INT32 zoney, lvlttly;
 
 	if (!G_IsTitleCardAvailable())
 		return;
@@ -1360,16 +1313,29 @@ void ST_drawTitleCard(void)
 	if (!LUA_HudEnabled(hud_stagetitle))
 		goto luahook;
 
-	if (lt_ticker >= (lt_endtime + TICRATE))
+	if (lt_ticker >= (lt_endtime))
 		goto luahook;
 
 	if ((lt_ticker-lt_lasttic) > 1)
 		lt_ticker = lt_lasttic+1;
 
-	ST_cacheLevelTitle();
-	actpat = lt_patches[0];
-	zigzag = lt_patches[1];
-	zztext = lt_patches[2];
+	switch (lt_ticker-1)
+	{ // yeah, this is how 2.1 does it
+	case 0:   zoney = 500; lvlttly = 500; break;
+	case 1:   zoney = 200; lvlttly =   0; break;
+	case 2:   zoney = 188; lvlttly =  12; break;
+	case 3:   zoney = 176; lvlttly =  24; break;
+	case 4:   zoney = 164; lvlttly =  36; break;
+	case 5:   zoney = 152; lvlttly =  48; break;
+	case 6:   zoney = 140; lvlttly =  60; break;
+	case 7:   zoney = 128; lvlttly =  72; break;
+	case 106: zoney =  80; lvlttly = 104; break;
+	case 107: zoney =  56; lvlttly = 128; break;
+	case 108: zoney =  32; lvlttly = 152; break;
+	case 109: zoney =   8; lvlttly = 176; break;
+	case 110: zoney =   0; lvlttly = 200; break;
+	default:  zoney = 104; lvlttly =  80; break;
+	}
 
 	lvlttlxpos = ((BASEVIDWIDTH/2) - (V_LevelNameWidth(lvlttl)/2));
 
@@ -1383,31 +1349,15 @@ void ST_drawTitleCard(void)
 	if (lvlttlxpos < 0)
 		lvlttlxpos = 0;
 
-	if (!splitscreen || (splitscreen && stplyr == &players[displayplayer]))
-	{
-		zzticker = lt_ticker;
-		V_DrawMappedPatch(FixedInt(lt_zigzag), (-zzticker) % zigzag->height, V_SNAPTOTOP|V_SNAPTOLEFT, zigzag, colormap);
-		V_DrawMappedPatch(FixedInt(lt_zigzag), (zigzag->height-zzticker) % zigzag->height, V_SNAPTOTOP|V_SNAPTOLEFT, zigzag, colormap);
-		V_DrawMappedPatch(FixedInt(lt_zigzag), (-zztext->height+zzticker) % zztext->height, V_SNAPTOTOP|V_SNAPTOLEFT, zztext, colormap);
-		V_DrawMappedPatch(FixedInt(lt_zigzag), (zzticker) % zztext->height, V_SNAPTOTOP|V_SNAPTOLEFT, zztext, colormap);
-	}
-
 	if (actnum)
 	{
-		if (!splitscreen)
-		{
-			if (actnum > 9) // slightly offset the act diamond for two-digit act numbers
-				V_DrawMappedPatch(ttlnumxpos + (V_LevelActNumWidth(actnum)/4) + ttlscroll, 104 - ttlscroll, 0, actpat, colormap);
-			else
-				V_DrawMappedPatch(ttlnumxpos + ttlscroll, 104 - ttlscroll, 0, actpat, colormap);
-		}
-		V_DrawLevelActNum(ttlnumxpos + ttlscroll, 104, V_PERPLAYER, actnum);
+		V_DrawLevelActNum(ttlnumxpos, zoney, V_PERPLAYER, actnum);
 	}
 
-	V_DrawLevelTitle(lvlttlxpos - ttlscroll, 80, V_PERPLAYER, lvlttl);
+	V_DrawLevelTitle(lvlttlxpos, lvlttly, V_PERPLAYER, lvlttl);
 	if (!(mapheaderinfo[gamemap-1]->levelflags & LF_NOZONE))
-		V_DrawLevelTitle(zonexpos + ttlscroll, 104, V_PERPLAYER, M_GetText("Zone"));
-	V_DrawCenteredString(subttlxpos - ttlscroll, 135, V_PERPLAYER|V_ALLOWLOWERCASE, subttl);
+		V_DrawLevelTitle(zonexpos, zoney, V_PERPLAYER, M_GetText("Zone"));
+	V_DrawCenteredString(subttlxpos, zoney + 31, V_PERPLAYER|V_ALLOWLOWERCASE, subttl);
 
 	lt_lasttic = lt_ticker;
 
diff --git a/src/st_stuff.h b/src/st_stuff.h
index 68ac900f7..06c69bdd5 100644
--- a/src/st_stuff.h
+++ b/src/st_stuff.h
@@ -55,8 +55,7 @@ void ST_preDrawTitleCard(void);
 void ST_preLevelTitleCardDrawer(void);
 void ST_drawWipeTitleCard(void);
 
-extern tic_t lt_ticker, lt_lasttic;
-extern tic_t lt_exitticker, lt_endtime;
+extern tic_t lt_ticker, lt_lasttic, lt_endtime;
 
 // return if player a is in the same team as player b
 boolean ST_SameTeam(player_t *a, player_t *b);
